<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="..\msbuild\Source.props" />

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <AzureFunctionsVersion>v3</AzureFunctionsVersion>
    <RootNamespace>Compiler.AzureFunction</RootNamespace>
    <_FunctionsSkipCleanOutput>true</_FunctionsSkipCleanOutput>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\Compiler\Compiler.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.NET.Sdk.Functions" Version="3.0.11" />
  </ItemGroup>

  <ItemGroup>
    <None Update="host.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="local.settings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <CopyToPublishDirectory>Never</CopyToPublishDirectory>
    </None>
  </ItemGroup>

  <PropertyGroup>
    <RuntimeFolder Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' ">osx</RuntimeFolder>
    <RuntimeFolder Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' ">linux</RuntimeFolder>
    <RuntimeFolder Condition=" '$(OS)' == 'Windows_NT' ">win</RuntimeFolder>
  </PropertyGroup>

  <Target Name="Copy runtime for local development" AfterTargets="AfterBuild">
    <Exec Command="cp $(OutDir)runtimes/$(RuntimeFolder)-x64/native/Microsoft.Quantum.Simulator.Runtime.dll $(OutDir)bin/Microsoft.Quantum.Simulator.Runtime.dll" />
  </Target>

  <Target Name="Copy linux runtime for Azure" AfterTargets="AfterPublish">
    <Exec Command="cp $(PublishDir)bin/runtimes/linux-x64/native/Microsoft.Quantum.Simulator.Runtime.dll $(PublishDir)bin/Microsoft.Quantum.Simulator.Runtime.dll" />
  </Target>

</Project>
