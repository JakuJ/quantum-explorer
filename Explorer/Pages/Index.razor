@page "/"
@using Explorer.Utilities.ComponentTree
@using Newtonsoft.Json
@using Compiler
@using System.IO
@using System.Diagnostics
@inject IJSRuntime JsRuntime;
@inject ICompiler Compiler;

<div id="splitPanes">
    @Components
</div>

@code {
    Panel<Editor> editor;
    Panel<DiagnosticList> diagnostics;

    RenderFragment Components => new PanelRenderer().Render(tree);

    readonly PanelTree tree = new PanelTree(PanelTree.Alignment.Horizontal);

    protected override void OnInitialized()
    {
        base.OnInitialized();
        editor = tree.AddPanel<Editor>();

        var sidePanel = new PanelTree(PanelTree.Alignment.Vertical);
        sidePanel.AddPanel<Compositor>();
        diagnostics = sidePanel.AddPanel<DiagnosticList>();

        tree.AddPanel(sidePanel);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;

        await InitializePanels();

        // string path = Path.Combine(Environment.CurrentDirectory, "../QSharpTestSources/Library.qs");
        // string code = await File.ReadAllTextAsync(path);
        // await Compiler.Compile(code);
        //
        // editor.Component.Code = Compiler.GetCode();
        // diagnostics.Component.Diagnostics = Compiler.GetDiagnostics();
    }

    private async Task InitializePanels()
    {
        string serializedTree = JsonConvert.SerializeObject(tree, new JsonSerializerSettings
        {
            TypeNameHandling = TypeNameHandling.Auto
        });
        await JsRuntime.InvokeVoidAsync("Library.InitializeSplitPanes", serializedTree);
    }
}
