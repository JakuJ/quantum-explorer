@using Microsoft.AspNetCore.Hosting
@using Common
@using System.IO
@inject IWebHostEnvironment Environment

<div id="@Id" class="gate @BorderStr">
    @if (CheckIconPath())
    {
        <img src="@(IconPath)" alt="@(Name)">
    }
    else
    {
        @if (@Name == "X" || @Name == "CNOT")
        {
            <GateX/>
        }
        else
        {
            <span class="gate-name">@Name</span>
        }
    }
</div>

@code {

    [Parameter]
    public string Name { get; set; } = null!;

    [Parameter]
    public Action<Gate> OnDispose { get; set; } = null!;

    [Parameter]
    public bool Border { get; set; } = true;

    protected override void OnParametersSet()
    {
        switch (Name)
        {
            case "X":
                Border = false;
                break;
            case "CNOT":
                Border = false;
                // draw the line to the controlled CNOT gate
                break;
        }
    }

    public string Id { get; } = UniqueId.CreateUniqueId();

    private string BorderStr => Border ? "gate-border" : "";

    private string IconPath => $"images/icons/{Name}.svg";

    /// Checks if the proper icon exists
    private bool CheckIconPath()
    {
        string iconPath = Path.Combine(Environment.WebRootPath, IconPath);
        return File.Exists(iconPath);
    }

}
