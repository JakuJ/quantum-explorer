@using Microsoft.Extensions.Logging
@using Common
@inject ILogger<Composer> Logger

<div class="grids">
    <Grid GateGrid="@(GridList[keysNames[selectedGridKey]])"/>
    @if(GridList.Count > 1)
    {
        <nav aria-label="Grid selector" class="grid-selector-container">
            <ul class="nav nav-tabs nav-left grid-pagination">
                @foreach (string key in keysNames.Keys)
                {
                    <li class="nav-item grid-selector-item">
                        <a class="nav-link @(selectedGridKey == key ? "active" : "")" @onclick="@(() => OnGridChange(key))">@(key)</a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>

@code {
    [Parameter]
    public List<GateGrid> GridList { get; set; } = null!;

    private Dictionary<string, int> keysNames = new();

    private string selectedGridKey { get; set; } = null!;

    protected override void OnParametersSet()
    {
        keysNames = Enumerable
            .Range(0, GridList.Count)
            .ToDictionary(x => (x + 1).ToString(), x => x);
        selectedGridKey = "1";
    }

    void OnGridChange(string key)
    {
        selectedGridKey = key;
        Logger.LogDebug($"Grid with key {key} was selected.");
    }
}
