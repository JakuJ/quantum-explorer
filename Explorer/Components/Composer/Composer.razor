@using Microsoft.Extensions.Logging
@using Compiler
@inject IJSRuntime JsRuntime
@inject ILogger<Composer> Logger

<div class="overflow-hidden" style="height: 100%">
    <RadzenTabs Change=@OnChange style="height: inherit">
        <Tabs>
            @foreach (var kvp in _ast)
            {
                @if(kvp.Value != null)
                {
                    <RadzenTabsItem Text="@(kvp.Key)" >
                        <Grid GateGrid="@(kvp.Value)"/>
                    </RadzenTabsItem>
                }
            }
        </Tabs>
    </RadzenTabs>
</div>

@code {
    private Dictionary<string, GateGrid> _ast = new();

    public async Task UpdateGridsAsync(Dictionary<string, GateGrid> ast)
    {
        // force the underlying Grid component to render from scratch
        _ast.Clear();
        await InvokeAsync(StateHasChanged);

        _ast = ast;
        await InvokeAsync(StateHasChanged);
    }

    void OnChange(int index)
    {
        Logger.LogInformation($"Tab with index {index} was selected.");
    }
}
