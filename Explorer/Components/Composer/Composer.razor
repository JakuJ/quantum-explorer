@using Microsoft.Extensions.Logging
@using Compiler
@inject IJSRuntime JsRuntime
@inject ILogger<Composer> Logger

<div class="overflow-hidden" style="height: 100%">
    <div>
        <ul class="nav nav-tabs">
            @foreach (var key in _ast.Keys)
            {
                <li class="nav-item">
                    <a class="nav-link noselect @(selectedKey == key ? "active" : "")" @onclick="@(() => OnTabChange(key))">@key</a>
                </li>
            }
        </ul>
    </div>
    <div class="vis-content">
        @if (_ast.ContainsKey(selectedKey))
        {
            <Grid GateGrid="@(_ast[selectedKey])"/>
        }
    </div>
</div>

@code {
    private Dictionary<string, GateGrid> _ast = new();

    private string selectedKey = "";

    public async Task UpdateGridsAsync(Dictionary<string, GateGrid> ast)
    {
        // force the underlying Grid component to render from scratch
        _ast.Clear();
        selectedKey = "";
        await InvokeAsync(StateHasChanged);

        _ast = ast;
        selectedKey = _ast.First().Key ?? "";
        await InvokeAsync(StateHasChanged);
    }

    void OnTabChange(string key)
    {
        selectedKey = key;
        Logger.LogInformation($"Tab with key {key} was selected.");
    }
}
