@using DatabaseHandler
@inject IJSRuntime JsRuntime;
@inject ICodeDatabaseHandler DatabaseHandler;
@inject NavigationManager NavigationManager;

<div>
    <button class="bar-btn" id="popoverShareButton" @onclick="OnClicked" disabled="@IsDisabled">Share</button>
    <div id="popover-content" class="d-none">
        <div class="share-popover">
            <input type="text" id="link-placeholder" readonly class="form-control-plaintext share-link" onfocus="this.select();">
            <img class="share-copy-btn shadow-none" src="/images/icons/copy.svg" onclick="Library.copyToClipboard()">
        </div>
    </div>
</div>


@code {

    [Parameter]
    public Func<Task<string>>? GetCode { get; set; }

    [Parameter]
    public bool IsDisabled { get; set; } = true;

    string sharedLink = "";
    string? sharedCode = null;

    private async Task OnClicked()
    {
        if (GetCode == null) return;
        string code = await GetCode.Invoke();
        if (sharedCode == null || sharedCode != code)
        {
            sharedCode = code;
            Guid id = DatabaseHandler.SaveCode("", code);
            sharedLink = $"{NavigationManager.BaseUri}{id}";
        }
        await JsRuntime.InvokeVoidAsync("Library.showSharePopOver", sharedLink);
    }

}
