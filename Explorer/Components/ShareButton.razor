@inject IJSRuntime JsRuntime;

<div>
    <button class="bar-btn" id="popoverShareButton" @onclick="OnClicked">Share</button>
    <div id="popover-content" class="d-none">
        <div class="share-popover">
            <input type="text" id="link-placeholder" readonly class="form-control-plaintext share-link" onfocus="this.select();">
            <input type="image" class="btn share-copy-btn shadow-none" src="/images/icons/copy.svg" onclick="Library.copyToClipboard($('#link-placeholder').attr('value'))">
        </div>
    </div>
</div>


@code {
    [Parameter]
    public Func<Task<string>>? GetSaveLink { get; set; }

    string link = "";

    private async Task OnClicked()
    {
        if (GetSaveLink == null) return;
        link = await GetSaveLink.Invoke();
        await JsRuntime.InvokeVoidAsync("Library.showSharePopOver", link);
    }
}
