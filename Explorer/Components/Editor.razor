@inject IJSRuntime JSRuntime
@using Microsoft.AspNetCore.Components.Rendering

@*<textarea @bind="Code" class="editor-textarea"></textarea>*@
<div class="editor-textarea" @ref="editorRootRef">

</div>
@code {
    private ElementReference editorRootRef;

    private string editorId = "";

    private async Task InitWebComponentAsync()
    {
        editorId = await JSRuntime.InvokeAsync<string>("Library.Editor.InitializeEditor", editorRootRef);
    }

    public async Task<string> GetCode()
    {
        return await JSRuntime.InvokeAsync<string>("Library.Editor.GetCode", editorId).AsTask();
    }

    public async Task SetCode(string code)
    {
        await JSRuntime.InvokeVoidAsync("Library.Editor.SetCode", editorId, code);
    }

    public string Code
    {
        get
        {
            return JSRuntime.InvokeAsync<string>("Library.Editor.GetCode").Result;
        }
        set
        {
            JSRuntime.InvokeVoidAsync("Library.Editor.SetCode", value);
            //InvokeAsync(StateHasChanged);
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await InitWebComponentAsync();
        }
    }

}
